---
# To use network policies, you must be using a networking solution which supports NetworkPolicy.
{{- if .Values.networkPolicyEnabled }}
{{- if .Values.controller.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: synthetic-pop-controller-network-policy
  namespace: {{ .Release.Namespace }}
# only allow ingress traffic from instana-agent and egress towards redis pods
spec:
  podSelector:
    matchLabels:
      component: synthetic-pop-controller
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - ports:
      - port: 8443
    - from:
      # only allow instana-agent to access
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: instana-agent
  egress:
    - ports:
      - port: 6379
        protocol: TCP
      to:
      - podSelector:
          matchLabels:
            app: redis
        namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: {{ .Values.controller.redisNamespace }}
{{- end }}
---
{{- if .Values.redis.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: synthetic-redis-egress-network-policy
  namespace: {{ .Release.Namespace }}
# deny all egress traffic
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: synthetic-redis-ingress-network-policy
  namespace: {{ .Release.Namespace }}
# only allow ingress from pop controller and playback engines
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
    - Ingress
  ingress:
    - from:
      - namespaceSelector: {}
        podSelector:
          matchLabels:
            component: synthetic-pop-controller
    - from:
      - podSelector:
          matchLabels:
            role: playbackengine
      {{- if .Values.keda.enabled }}
      - namespaceSelector:
          matchLabels:
            name: {{ .Values.keda.namespace }}
      {{- end }}
{{- end }}
---
{{- if or (or .Values.http.enabled .Values.javascript.enabled) (or .Values.browserscript.enabled .Values.ism.enabled) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: synthetic-playbackengine-network-policy
  namespace: {{ .Release.Namespace }}
# deny all ingress traffic
# add egress here to block access to some certain ip or ip range e.g, restrict pod access to the metadata API
# See also: https://kubernetes.io/docs/concepts/services-networking/network-policies/
spec:
  podSelector:
    matchLabels:
      role: playbackengine
  policyTypes:
    - Ingress
    - Egress
  {{- include "playback-engine.networkPolicy.egress" . | nindent 2 }}
{{- end }}
{{- end }}
